user nginx;
worker_processes auto; # デフォルトは１でt2.microはコア数1だけど、どうなるかわからないのでautoに。
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# モジュールの読み込み
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    # multi_accept on;　# 同時アクセスを可能にする。スペックとの相談。
}

http {
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    # include             /etc/nginx/conf.d/*.conf;         # デフォルト設定はポートが競合するので、退避。

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   10;                 # HTTPの接続時間。デフォルトは75秒みたいで長いので修正。
    types_hash_max_size 2048;

    index   index.html home.htm;

    upstream back_server {
        server back:8000 fail_timeout=0;
    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  localhost;
        client_max_body_size    10M;         # クライアントが遅れるデータは1Gまで

        # include /etc/nginx/default.d/*.conf;          # デフォルトはポートが競合するので、退避。

        location /static/ {
            alias /opt/apps/static/;
        }

        location / {
            try_files $uri @proxy_to_back;    # URIのパスがなければ@proxy_to_backに内部リダイレクト
        }

        location = /health/ {
            access_log off;
            return 200 "OK";
        }

        location @proxy_to_back {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_pass http://back_server;
        }
        
        error_page 404 /404.html;
            location = /40x.html {
                root /etc/nginx/html;         #Dockerfileでコンテナ内にCOPY→指定されたhtmlを表示
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /etc/nginx/html;         #Dockerfileでコンテナ内にCOPY→指定されたhtmlを表示
        }
    }
}