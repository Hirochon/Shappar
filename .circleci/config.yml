version: 2.1
description: "Djangoサーバーの起動とマイグレーション＆自動デプロイ"

orbs:
    aws-ecr: circleci/aws-ecr@6.7.1
    aws-ecs: circleci/aws-ecs@1.1.0
    aws-s3: circleci/aws-s3@1.0.15

executors:
    shappar-django:
        working_directory: ~/Shappar
        docker:
            - image: circleci/python:3.8.1
              environment:
                PYTHONDONTWRITEBYTECODE: 1
                PYTHONUNBUFFERED: 1
                TZ: Asia/Tokyo
            - image: circleci/postgres:12.1
              environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                TZ: Asia/Tokyo
    shappar-static:
        working_directory: ~/Shappar
        docker:
            - image: circleci/python:3.8.1

commands:
    chown_python_package:
        description: "PipInstallするpackage達の権限をcircleciに変更する"
        steps:
            - run:
                name: Change Owner Python Package Directory
                command: |
                    sudo chown -R circleci:circleci /usr/local/bin
                    sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
    restore_python_package:
        description: "PipInstallしていたpackage群のキャッシュを読み込む"
        steps:
            - restore_cache:
                name: Restore Python Package
                keys:
                - shappar-v2-{{ checksum "requirements.txt" }}
                - shappar-v2-
    run_pip_install:
        description: "requirements.txtを元にPipInstallする"
        steps:
            - run:
                name: Start pip install
                command: pip install -r requirements.txt
    save_python_package:
        description: "PipInstallしたpackage群をキャッシュする"
        steps:
            - save_cache:
                name: Save Python Package
                key: shappar-v2-{{ checksum "requirements.txt" }}
                paths:
                - /usr/local/bin
                - /usr/local/lib/python3.8/site-packages
    db_migrations:
        description: "テスト実行用DBのマイグレーションを行う"
        steps:
            - run:
                name: Start db migrations
                command: |
                    python3 manage.py makemigrations --settings=config.settings.circleci
                    python3 manage.py migrate --settings=config.settings.circleci
    run_test:
        description: "テストを実行"
        steps:
            - run:
                name: Start running test
                command: python3 manage.py test --settings=config.settings.circleci

jobs:
    build-test:
        executor: shappar-django
        steps:
            - checkout
            - chown_python_package
            - restore_python_package
            - run_pip_install
            - save_python_package
            - db_migrations
            - run_test
    css-deploy:
        executor: shappar-static
        steps:
            - checkout
            - aws-s3/copy:
                from: static/css
                to: 's3://${AWS_STORAGE_BUCKET_NAME}/static/css/'
    js-deploy:
        executor: shappar-static
        steps:
            - checkout
            - aws-s3/copy:
                from: static/js
                to: 's3://${AWS_STORAGE_BUCKET_NAME}/ststic/js/'
workflows:
    version: 2
    # Djangoのテスト
    test:
        jobs:
            - build-test:
                filters:
                    branches:
                        ignore: master
    # 静的ファイル(CSS/JS)をS3へデプロイ
    s3-static-deploy:
        jobs:
            - css-deploy:
                filters:
                    branches:
                        only: circleci
            - js-deploy:
                filters:
                    branches:
                        only: circleci
    # Djangoのデプロイ
    back-deploy:
        jobs:
            - aws-ecr/build-and-push-image:
                account-url: AWS_ECR_ACCOUNT_URL
                region: AWS_REGION
                aws-access-key-id: AWS_ACCESS_KEY_ID
                aws-secret-access-key: AWS_SECRET_ACCESS_KEY
                create-repo: true
                repo: shappar-back
                tag: "${CIRCLE_SHA2}"
                filters:
                    branches:
                        only: master
            - aws-ecs/deploy-service-update:
                requires: 
                    - aws-ecr/build-and-push-image
                family: '${MY_APP_PREFIX}-task'
                cluster-name: '${MY_APP_PREFIX}-cluster-v2'
                service-name: '${MY_APP_PREFIX}-service-v2'
                container-image-name-updates: 'container=shappar-back,tag=${CIRCLE_SHA2}'
    # Nginxのデプロイ
    nginx-deploy:
        jobs:
            - aws-ecr/build-and-push-image:
                account-url: AWS_ECR_ACCOUNT_URL
                region: AWS_REGION
                aws-access-key-id: AWS_ACCESS_KEY_ID
                aws-secret-access-key: AWS_SECRET_ACCESS_KEY
                create-repo: true
                path: ./nginx/
                repo: shappar-nginx
                tag: "${CIRCLE_SHA2}"
                filters:
                    branches:
                        only: master
            - aws-ecs/deploy-service-update:
                requires: 
                    - aws-ecr/build-and-push-image
                family: '${MY_APP_PREFIX}-task'
                cluster-name: '${MY_APP_PREFIX}-cluster-v2'
                service-name: '${MY_APP_PREFIX}-service-v2'
                container-image-name-updates: 'container=shappar-nginx,tag=${CIRCLE_SHA2}'
