// Code generated by go-swagger; DO NOT EDIT.

package friendships

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PutAPIV1FriendshipsUserIDHandlerFunc turns a function with the right signature into a put API v1 friendships user ID handler
type PutAPIV1FriendshipsUserIDHandlerFunc func(PutAPIV1FriendshipsUserIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutAPIV1FriendshipsUserIDHandlerFunc) Handle(params PutAPIV1FriendshipsUserIDParams) middleware.Responder {
	return fn(params)
}

// PutAPIV1FriendshipsUserIDHandler interface for that can handle valid put API v1 friendships user ID params
type PutAPIV1FriendshipsUserIDHandler interface {
	Handle(PutAPIV1FriendshipsUserIDParams) middleware.Responder
}

// NewPutAPIV1FriendshipsUserID creates a new http.Handler for the put API v1 friendships user ID operation
func NewPutAPIV1FriendshipsUserID(ctx *middleware.Context, handler PutAPIV1FriendshipsUserIDHandler) *PutAPIV1FriendshipsUserID {
	return &PutAPIV1FriendshipsUserID{Context: ctx, Handler: handler}
}

/*
	PutAPIV1FriendshipsUserID swagger:route PUT /api/v1/friendships/{userId} friendships putApiV1FriendshipsUserId

update friendship
*/
type PutAPIV1FriendshipsUserID struct {
	Context *middleware.Context
	Handler PutAPIV1FriendshipsUserIDHandler
}

func (o *PutAPIV1FriendshipsUserID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPutAPIV1FriendshipsUserIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
