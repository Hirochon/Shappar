// Code generated by go-swagger; DO NOT EDIT.

package posts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAPIV1PostsPublicHandlerFunc turns a function with the right signature into a get API v1 posts public handler
type GetAPIV1PostsPublicHandlerFunc func(GetAPIV1PostsPublicParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAPIV1PostsPublicHandlerFunc) Handle(params GetAPIV1PostsPublicParams) middleware.Responder {
	return fn(params)
}

// GetAPIV1PostsPublicHandler interface for that can handle valid get API v1 posts public params
type GetAPIV1PostsPublicHandler interface {
	Handle(GetAPIV1PostsPublicParams) middleware.Responder
}

// NewGetAPIV1PostsPublic creates a new http.Handler for the get API v1 posts public operation
func NewGetAPIV1PostsPublic(ctx *middleware.Context, handler GetAPIV1PostsPublicHandler) *GetAPIV1PostsPublic {
	return &GetAPIV1PostsPublic{Context: ctx, Handler: handler}
}

/*
	GetAPIV1PostsPublic swagger:route GET /api/v1/posts/public posts getApiV1PostsPublic

# Your GET endpoint

get public posts
*/
type GetAPIV1PostsPublic struct {
	Context *middleware.Context
	Handler GetAPIV1PostsPublicHandler
}

func (o *GetAPIV1PostsPublic) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAPIV1PostsPublicParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetAPIV1PostsPublicNotFoundBody get API v1 posts public not found body
//
// swagger:model GetAPIV1PostsPublicNotFoundBody
type GetAPIV1PostsPublicNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *GetAPIV1PostsPublicNotFoundBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// detail
		Detail string `json:"detail,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Detail = props.Detail
	return nil
}

// Validate validates this get API v1 posts public not found body
func (o *GetAPIV1PostsPublicNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get API v1 posts public not found body based on context it is used
func (o *GetAPIV1PostsPublicNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV1PostsPublicNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV1PostsPublicNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetAPIV1PostsPublicNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
