// Code generated by go-swagger; DO NOT EDIT.

package posts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostAPIV1PostsCreatedCode is the HTTP code returned for type PostAPIV1PostsCreated
const PostAPIV1PostsCreatedCode int = 201

/*
PostAPIV1PostsCreated Created

swagger:response postApiV1PostsCreated
*/
type PostAPIV1PostsCreated struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostAPIV1PostsCreated creates PostAPIV1PostsCreated with default headers values
func NewPostAPIV1PostsCreated() *PostAPIV1PostsCreated {

	return &PostAPIV1PostsCreated{}
}

// WithPayload adds the payload to the post Api v1 posts created response
func (o *PostAPIV1PostsCreated) WithPayload(payload interface{}) *PostAPIV1PostsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api v1 posts created response
func (o *PostAPIV1PostsCreated) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPIV1PostsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostAPIV1PostsBadRequestCode is the HTTP code returned for type PostAPIV1PostsBadRequest
const PostAPIV1PostsBadRequestCode int = 400

/*
PostAPIV1PostsBadRequest Bad Request

swagger:response postApiV1PostsBadRequest
*/
type PostAPIV1PostsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostAPIV1PostsBadRequestBody `json:"body,omitempty"`
}

// NewPostAPIV1PostsBadRequest creates PostAPIV1PostsBadRequest with default headers values
func NewPostAPIV1PostsBadRequest() *PostAPIV1PostsBadRequest {

	return &PostAPIV1PostsBadRequest{}
}

// WithPayload adds the payload to the post Api v1 posts bad request response
func (o *PostAPIV1PostsBadRequest) WithPayload(payload *PostAPIV1PostsBadRequestBody) *PostAPIV1PostsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api v1 posts bad request response
func (o *PostAPIV1PostsBadRequest) SetPayload(payload *PostAPIV1PostsBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPIV1PostsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
