// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAPIV1UsersUserIDSettingsHandlerFunc turns a function with the right signature into a get API v1 users user ID settings handler
type GetAPIV1UsersUserIDSettingsHandlerFunc func(GetAPIV1UsersUserIDSettingsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAPIV1UsersUserIDSettingsHandlerFunc) Handle(params GetAPIV1UsersUserIDSettingsParams) middleware.Responder {
	return fn(params)
}

// GetAPIV1UsersUserIDSettingsHandler interface for that can handle valid get API v1 users user ID settings params
type GetAPIV1UsersUserIDSettingsHandler interface {
	Handle(GetAPIV1UsersUserIDSettingsParams) middleware.Responder
}

// NewGetAPIV1UsersUserIDSettings creates a new http.Handler for the get API v1 users user ID settings operation
func NewGetAPIV1UsersUserIDSettings(ctx *middleware.Context, handler GetAPIV1UsersUserIDSettingsHandler) *GetAPIV1UsersUserIDSettings {
	return &GetAPIV1UsersUserIDSettings{Context: ctx, Handler: handler}
}

/*
	GetAPIV1UsersUserIDSettings swagger:route GET /api/v1/users/{user_id}/settings users getApiV1UsersUserIdSettings

get user settings
*/
type GetAPIV1UsersUserIDSettings struct {
	Context *middleware.Context
	Handler GetAPIV1UsersUserIDSettingsHandler
}

func (o *GetAPIV1UsersUserIDSettings) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAPIV1UsersUserIDSettingsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetAPIV1UsersUserIDSettingsOKBody get API v1 users user ID settings o k body
//
// swagger:model GetAPIV1UsersUserIDSettingsOKBody
type GetAPIV1UsersUserIDSettingsOKBody struct {

	// darkmode
	Darkmode bool `json:"darkmode,omitempty"`

	// push
	Push bool `json:"push,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *GetAPIV1UsersUserIDSettingsOKBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// darkmode
		Darkmode bool `json:"darkmode,omitempty"`

		// push
		Push bool `json:"push,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Darkmode = props.Darkmode
	o.Push = props.Push
	return nil
}

// Validate validates this get API v1 users user ID settings o k body
func (o *GetAPIV1UsersUserIDSettingsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get API v1 users user ID settings o k body based on context it is used
func (o *GetAPIV1UsersUserIDSettingsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV1UsersUserIDSettingsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV1UsersUserIDSettingsOKBody) UnmarshalBinary(b []byte) error {
	var res GetAPIV1UsersUserIDSettingsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
