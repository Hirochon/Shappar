// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteAPIV1UsersUserIDHandlerFunc turns a function with the right signature into a delete API v1 users user ID handler
type DeleteAPIV1UsersUserIDHandlerFunc func(DeleteAPIV1UsersUserIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteAPIV1UsersUserIDHandlerFunc) Handle(params DeleteAPIV1UsersUserIDParams) middleware.Responder {
	return fn(params)
}

// DeleteAPIV1UsersUserIDHandler interface for that can handle valid delete API v1 users user ID params
type DeleteAPIV1UsersUserIDHandler interface {
	Handle(DeleteAPIV1UsersUserIDParams) middleware.Responder
}

// NewDeleteAPIV1UsersUserID creates a new http.Handler for the delete API v1 users user ID operation
func NewDeleteAPIV1UsersUserID(ctx *middleware.Context, handler DeleteAPIV1UsersUserIDHandler) *DeleteAPIV1UsersUserID {
	return &DeleteAPIV1UsersUserID{Context: ctx, Handler: handler}
}

/*
	DeleteAPIV1UsersUserID swagger:route DELETE /api/v1/users/{user_id} users deleteApiV1UsersUserId

delete user
*/
type DeleteAPIV1UsersUserID struct {
	Context *middleware.Context
	Handler DeleteAPIV1UsersUserIDHandler
}

func (o *DeleteAPIV1UsersUserID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteAPIV1UsersUserIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
