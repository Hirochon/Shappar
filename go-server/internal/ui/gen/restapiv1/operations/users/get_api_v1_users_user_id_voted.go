// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAPIV1UsersUserIDVotedHandlerFunc turns a function with the right signature into a get API v1 users user ID voted handler
type GetAPIV1UsersUserIDVotedHandlerFunc func(GetAPIV1UsersUserIDVotedParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAPIV1UsersUserIDVotedHandlerFunc) Handle(params GetAPIV1UsersUserIDVotedParams) middleware.Responder {
	return fn(params)
}

// GetAPIV1UsersUserIDVotedHandler interface for that can handle valid get API v1 users user ID voted params
type GetAPIV1UsersUserIDVotedHandler interface {
	Handle(GetAPIV1UsersUserIDVotedParams) middleware.Responder
}

// NewGetAPIV1UsersUserIDVoted creates a new http.Handler for the get API v1 users user ID voted operation
func NewGetAPIV1UsersUserIDVoted(ctx *middleware.Context, handler GetAPIV1UsersUserIDVotedHandler) *GetAPIV1UsersUserIDVoted {
	return &GetAPIV1UsersUserIDVoted{Context: ctx, Handler: handler}
}

/*
	GetAPIV1UsersUserIDVoted swagger:route GET /api/v1/users/{user_id}/voted users getApiV1UsersUserIdVoted

# Your GET endpoint

user voted posts
*/
type GetAPIV1UsersUserIDVoted struct {
	Context *middleware.Context
	Handler GetAPIV1UsersUserIDVotedHandler
}

func (o *GetAPIV1UsersUserIDVoted) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAPIV1UsersUserIDVotedParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
