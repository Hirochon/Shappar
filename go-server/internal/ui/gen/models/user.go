// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// User User
//
// swagger:model User
type User struct {

	// home image
	HomeImage string `json:"homeImage,omitempty"`

	// iconimage
	Iconimage string `json:"iconimage,omitempty"`

	// introduction
	Introduction string `json:"introduction,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *User) UnmarshalJSON(data []byte) error {
	var props struct {

		// home image
		HomeImage string `json:"homeImage,omitempty"`

		// iconimage
		Iconimage string `json:"iconimage,omitempty"`

		// introduction
		Introduction string `json:"introduction,omitempty"`

		// name
		Name string `json:"name,omitempty"`

		// user id
		UserID string `json:"user_id,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.HomeImage = props.HomeImage
	m.Iconimage = props.Iconimage
	m.Introduction = props.Introduction
	m.Name = props.Name
	m.UserID = props.UserID
	return nil
}

// Validate validates this user
func (m *User) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user based on context it is used
func (m *User) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *User) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *User) UnmarshalBinary(b []byte) error {
	var res User
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
